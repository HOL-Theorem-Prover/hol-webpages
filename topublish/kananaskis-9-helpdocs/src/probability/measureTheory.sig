signature measureTheory =
sig
  type thm = Thm.thm

  (*  Definitions  *)
    val Borel_def : thm
    val additive_def : thm
    val algebra_def : thm
    val closed_cdi_def : thm
    val countably_additive_def : thm
    val countably_subadditive_def : thm
    val fn_abs_def : thm
    val fn_minus_def : thm
    val fn_plus_def : thm
    val increasing_def : thm
    val indicator_fn_def : thm
    val inf_measure_def : thm
    val lambda_system_def : thm
    val m_space_def : thm
    val measurable_def : thm
    val measurable_sets_def : thm
    val measure_def : thm
    val measure_preserving_def : thm
    val measure_space_def : thm
    val null_set_def : thm
    val outer_measure_space_def : thm
    val pos_simple_fn_def : thm
    val positive_def : thm
    val sigma_algebra_def : thm
    val sigma_def : thm
    val smallest_closed_cdi_def : thm
    val space_def : thm
    val subadditive_def : thm
    val subset_class_def : thm
    val subsets_def : thm

  (*  Theorems  *)
    val ADDITIVE : thm
    val ADDITIVE_INCREASING : thm
    val ADDITIVE_SUM : thm
    val ALGEBRA_ALT_INTER : thm
    val ALGEBRA_COMPL : thm
    val ALGEBRA_DIFF : thm
    val ALGEBRA_EMPTY : thm
    val ALGEBRA_FINITE_UNION : thm
    val ALGEBRA_INTER : thm
    val ALGEBRA_INTER_SPACE : thm
    val ALGEBRA_SPACE : thm
    val ALGEBRA_SUBSET_LAMBDA_SYSTEM : thm
    val ALGEBRA_UNION : thm
    val BIGUNION_IMAGE_Q : thm
    val BOREL_MEASURABLE_SETS : thm
    val BOREL_MEASURABLE_SETS1 : thm
    val BOREL_MEASURABLE_SETS10 : thm
    val BOREL_MEASURABLE_SETS2 : thm
    val BOREL_MEASURABLE_SETS3 : thm
    val BOREL_MEASURABLE_SETS4 : thm
    val BOREL_MEASURABLE_SETS5 : thm
    val BOREL_MEASURABLE_SETS6 : thm
    val BOREL_MEASURABLE_SETS7 : thm
    val BOREL_MEASURABLE_SETS8 : thm
    val BOREL_MEASURABLE_SETS9 : thm
    val CARATHEODORY : thm
    val CARATHEODORY_LEMMA : thm
    val CLOSED_CDI_COMPL : thm
    val CLOSED_CDI_DISJOINT : thm
    val CLOSED_CDI_DUNION : thm
    val CLOSED_CDI_INCREASING : thm
    val COUNTABLY_ADDITIVE : thm
    val COUNTABLY_ADDITIVE_ADDITIVE : thm
    val COUNTABLY_SUBADDITIVE : thm
    val COUNTABLY_SUBADDITIVE_SUBADDITIVE : thm
    val FN_MINUS_ADD_LE : thm
    val FN_MINUS_CMUL : thm
    val FN_MINUS_POS : thm
    val FN_MINUS_POS_ZERO : thm
    val FN_PLUS_ADD_LE : thm
    val FN_PLUS_CMUL : thm
    val FN_PLUS_POS : thm
    val FN_PLUS_POS_ID : thm
    val IMAGE_SING : thm
    val INCREASING : thm
    val INCREASING_ADDITIVE_SUMMABLE : thm
    val INDICATOR_FN_MUL_INTER : thm
    val INF_MEASURE_AGREES : thm
    val INF_MEASURE_CLOSE : thm
    val INF_MEASURE_COUNTABLY_SUBADDITIVE : thm
    val INF_MEASURE_EMPTY : thm
    val INF_MEASURE_INCREASING : thm
    val INF_MEASURE_LE : thm
    val INF_MEASURE_NONEMPTY : thm
    val INF_MEASURE_OUTER : thm
    val INF_MEASURE_POS : thm
    val INF_MEASURE_POS0 : thm
    val INF_MEASURE_POSITIVE : thm
    val IN_MEASURABLE : thm
    val IN_MEASURABLE_BOREL : thm
    val IN_MEASURABLE_BOREL_ABS : thm
    val IN_MEASURABLE_BOREL_ADD : thm
    val IN_MEASURABLE_BOREL_ALL : thm
    val IN_MEASURABLE_BOREL_ALL_MEASURE : thm
    val IN_MEASURABLE_BOREL_ALT1 : thm
    val IN_MEASURABLE_BOREL_ALT2 : thm
    val IN_MEASURABLE_BOREL_ALT3 : thm
    val IN_MEASURABLE_BOREL_ALT4 : thm
    val IN_MEASURABLE_BOREL_ALT5 : thm
    val IN_MEASURABLE_BOREL_ALT6 : thm
    val IN_MEASURABLE_BOREL_ALT7 : thm
    val IN_MEASURABLE_BOREL_ALT8 : thm
    val IN_MEASURABLE_BOREL_ALT9 : thm
    val IN_MEASURABLE_BOREL_CMUL : thm
    val IN_MEASURABLE_BOREL_CMUL_INDICATOR : thm
    val IN_MEASURABLE_BOREL_CONST : thm
    val IN_MEASURABLE_BOREL_FN_MINUS : thm
    val IN_MEASURABLE_BOREL_FN_PLUS : thm
    val IN_MEASURABLE_BOREL_INDICATOR : thm
    val IN_MEASURABLE_BOREL_LE : thm
    val IN_MEASURABLE_BOREL_LT : thm
    val IN_MEASURABLE_BOREL_MAX : thm
    val IN_MEASURABLE_BOREL_MONO_SUP : thm
    val IN_MEASURABLE_BOREL_MUL : thm
    val IN_MEASURABLE_BOREL_MUL_INDICATOR : thm
    val IN_MEASURABLE_BOREL_MUL_INDICATOR_EQ : thm
    val IN_MEASURABLE_BOREL_NEGINF : thm
    val IN_MEASURABLE_BOREL_PLUS_MINUS : thm
    val IN_MEASURABLE_BOREL_POS_SIMPLE_FN : thm
    val IN_MEASURABLE_BOREL_POW : thm
    val IN_MEASURABLE_BOREL_SQR : thm
    val IN_MEASURABLE_BOREL_SUB : thm
    val IN_MEASURABLE_BOREL_SUM : thm
    val IN_MEASURE_PRESERVING : thm
    val IN_SIGMA : thm
    val LAMBDA_SYSTEM_ADDITIVE : thm
    val LAMBDA_SYSTEM_ALGEBRA : thm
    val LAMBDA_SYSTEM_CARATHEODORY : thm
    val LAMBDA_SYSTEM_COMPL : thm
    val LAMBDA_SYSTEM_EMPTY : thm
    val LAMBDA_SYSTEM_INCREASING : thm
    val LAMBDA_SYSTEM_INTER : thm
    val LAMBDA_SYSTEM_POSITIVE : thm
    val LAMBDA_SYSTEM_STRONG_ADDITIVE : thm
    val LAMBDA_SYSTEM_STRONG_SUM : thm
    val MEASUBABLE_BIGUNION_LEMMA : thm
    val MEASURABLE_BIGUNION_PROPERTY : thm
    val MEASURABLE_BOREL : thm
    val MEASURABLE_COMP : thm
    val MEASURABLE_COMP_STRONG : thm
    val MEASURABLE_COMP_STRONGER : thm
    val MEASURABLE_DIFF_PROPERTY : thm
    val MEASURABLE_I : thm
    val MEASURABLE_LIFT : thm
    val MEASURABLE_POW_TO_POW : thm
    val MEASURABLE_POW_TO_POW_IMAGE : thm
    val MEASURABLE_PROD_SIGMA : thm
    val MEASURABLE_RANGE_REDUCE : thm
    val MEASURABLE_SETS_SUBSET_SPACE : thm
    val MEASURABLE_SIGMA : thm
    val MEASURABLE_SIGMA_PREIMAGES : thm
    val MEASURABLE_SUBSET : thm
    val MEASURABLE_UP_LIFT : thm
    val MEASURABLE_UP_SIGMA : thm
    val MEASURABLE_UP_SUBSET : thm
    val MEASURE_ADDITIVE : thm
    val MEASURE_COMPL : thm
    val MEASURE_COMPL_SUBSET : thm
    val MEASURE_COUNTABLE_INCREASING : thm
    val MEASURE_COUNTABLY_ADDITIVE : thm
    val MEASURE_DOWN : thm
    val MEASURE_EMPTY : thm
    val MEASURE_PRESERVING_LIFT : thm
    val MEASURE_PRESERVING_SUBSET : thm
    val MEASURE_PRESERVING_UP_LIFT : thm
    val MEASURE_PRESERVING_UP_SIGMA : thm
    val MEASURE_PRESERVING_UP_SUBSET : thm
    val MEASURE_REAL_SUM_IMAGE : thm
    val MEASURE_SPACE_ADDITIVE : thm
    val MEASURE_SPACE_BIGINTER : thm
    val MEASURE_SPACE_BIGUNION : thm
    val MEASURE_SPACE_CMUL : thm
    val MEASURE_SPACE_DIFF : thm
    val MEASURE_SPACE_EMPTY_MEASURABLE : thm
    val MEASURE_SPACE_INCREASING : thm
    val MEASURE_SPACE_INTER : thm
    val MEASURE_SPACE_IN_MSPACE : thm
    val MEASURE_SPACE_MSPACE_MEASURABLE : thm
    val MEASURE_SPACE_POSITIVE : thm
    val MEASURE_SPACE_REDUCE : thm
    val MEASURE_SPACE_RESTRICTED : thm
    val MEASURE_SPACE_SUBSET : thm
    val MEASURE_SPACE_SUBSET_MSPACE : thm
    val MEASURE_SPACE_UNION : thm
    val MONOTONE_CONVERGENCE : thm
    val MONOTONE_CONVERGENCE2 : thm
    val MONOTONE_CONVERGENCE_BIGINTER : thm
    val MONOTONE_CONVERGENCE_BIGINTER2 : thm
    val OUTER_MEASURE_SPACE_POSITIVE : thm
    val POW_ALGEBRA : thm
    val POW_SIGMA_ALGEBRA : thm
    val SIGMA_ALGEBRA : thm
    val SIGMA_ALGEBRA_ALGEBRA : thm
    val SIGMA_ALGEBRA_ALT : thm
    val SIGMA_ALGEBRA_ALT_DISJOINT : thm
    val SIGMA_ALGEBRA_ALT_MONO : thm
    val SIGMA_ALGEBRA_BOREL : thm
    val SIGMA_ALGEBRA_COUNTABLE_UNION : thm
    val SIGMA_ALGEBRA_ENUM : thm
    val SIGMA_ALGEBRA_FN : thm
    val SIGMA_ALGEBRA_FN_BIGINTER : thm
    val SIGMA_ALGEBRA_FN_DISJOINT : thm
    val SIGMA_ALGEBRA_SIGMA : thm
    val SIGMA_POW : thm
    val SIGMA_PROPERTY : thm
    val SIGMA_PROPERTY_ALT : thm
    val SIGMA_PROPERTY_DISJOINT : thm
    val SIGMA_PROPERTY_DISJOINT_LEMMA : thm
    val SIGMA_PROPERTY_DISJOINT_LEMMA1 : thm
    val SIGMA_PROPERTY_DISJOINT_LEMMA2 : thm
    val SIGMA_PROPERTY_DISJOINT_WEAK : thm
    val SIGMA_REDUCE : thm
    val SIGMA_SUBSET : thm
    val SIGMA_SUBSET_MEASURABLE_SETS : thm
    val SIGMA_SUBSET_SUBSETS : thm
    val SMALLEST_CLOSED_CDI : thm
    val SPACE : thm
    val SPACE_BOREL : thm
    val SPACE_SIGMA : thm
    val SPACE_SMALLEST_CLOSED_CDI : thm
    val STRONG_MEASURE_SPACE_SUBSET : thm
    val SUBADDITIVE : thm
    val SUBSET_BIGINTER : thm
    val UNIV_SIGMA_ALGEBRA : thm
    val finite_additivity_sufficient_for_finite_spaces : thm
    val finite_additivity_sufficient_for_finite_spaces2 : thm
    val indicator_fn_split : thm
    val indicator_fn_suminf : thm
    val measure_split : thm

  val measure_grammars : type_grammar.grammar * term_grammar.grammar
(*
   [extreal] Parent theory of "measure"

   [Borel_def]  Definition

      |- Borel = sigma ùïå(:extreal) (IMAGE (Œªa. {x | x < a}) ùïå(:extreal))

   [additive_def]  Definition

      |- ‚àÄm.
           additive m ‚áî
           ‚àÄs t.
             s ‚àà measurable_sets m ‚àß t ‚àà measurable_sets m ‚àß DISJOINT s t ‚áí
             (measure m (s ‚à™ t) = measure m s + measure m t)

   [algebra_def]  Definition

      |- ‚àÄa.
           algebra a ‚áî
           subset_class (space a) (subsets a) ‚àß ‚àÖ ‚àà subsets a ‚àß
           (‚àÄs. s ‚àà subsets a ‚áí space a DIFF s ‚àà subsets a) ‚àß
           ‚àÄs t. s ‚àà subsets a ‚àß t ‚àà subsets a ‚áí s ‚à™ t ‚àà subsets a

   [closed_cdi_def]  Definition

      |- ‚àÄp.
           closed_cdi p ‚áî
           subset_class (space p) (subsets p) ‚àß
           (‚àÄs. s ‚àà subsets p ‚áí space p DIFF s ‚àà subsets p) ‚àß
           (‚àÄf.
              f ‚àà (ùïå(:num) -> subsets p) ‚àß (f 0 = ‚àÖ) ‚àß
              (‚àÄn. f n ‚äÜ f (SUC n)) ‚áí
              BIGUNION (IMAGE f ùïå(:num)) ‚àà subsets p) ‚àß
           ‚àÄf.
             f ‚àà (ùïå(:num) -> subsets p) ‚àß
             (‚àÄm n. m ‚â† n ‚áí DISJOINT (f m) (f n)) ‚áí
             BIGUNION (IMAGE f ùïå(:num)) ‚àà subsets p

   [countably_additive_def]  Definition

      |- ‚àÄm.
           countably_additive m ‚áî
           ‚àÄf.
             f ‚àà (ùïå(:num) -> measurable_sets m) ‚àß
             (‚àÄm n. m ‚â† n ‚áí DISJOINT (f m) (f n)) ‚àß
             BIGUNION (IMAGE f ùïå(:num)) ‚àà measurable_sets m ‚áí
             measure m o f sums measure m (BIGUNION (IMAGE f ùïå(:num)))

   [countably_subadditive_def]  Definition

      |- ‚àÄm.
           countably_subadditive m ‚áî
           ‚àÄf.
             f ‚àà (ùïå(:num) -> measurable_sets m) ‚àß
             BIGUNION (IMAGE f ùïå(:num)) ‚àà measurable_sets m ‚àß
             summable (measure m o f) ‚áí
             measure m (BIGUNION (IMAGE f ùïå(:num))) ‚â§
             suminf (measure m o f)

   [fn_abs_def]  Definition

      |- ‚àÄf. fn_abs f = (Œªx. abs (f x))

   [fn_minus_def]  Definition

      |- ‚àÄf. fn_minus f = (Œªx. if f x < 0 then -f x else 0)

   [fn_plus_def]  Definition

      |- ‚àÄf. fn_plus f = (Œªx. if 0 < f x then f x else 0)

   [increasing_def]  Definition

      |- ‚àÄm.
           increasing m ‚áî
           ‚àÄs t.
             s ‚àà measurable_sets m ‚àß t ‚àà measurable_sets m ‚àß s ‚äÜ t ‚áí
             measure m s ‚â§ measure m t

   [indicator_fn_def]  Definition

      |- ‚àÄs. indicator_fn s = (Œªx. if x ‚àà s then 1 else 0)

   [inf_measure_def]  Definition

      |- ‚àÄm s.
           inf_measure m s =
           inf
             {r |
              ‚àÉf.
                f ‚àà (ùïå(:num) -> measurable_sets m) ‚àß
                (‚àÄm n. m ‚â† n ‚áí DISJOINT (f m) (f n)) ‚àß
                s ‚äÜ BIGUNION (IMAGE f ùïå(:num)) ‚àß measure m o f sums r}

   [lambda_system_def]  Definition

      |- ‚àÄgen lam.
           lambda_system gen lam =
           {l |
            l ‚àà subsets gen ‚àß
            ‚àÄs.
              s ‚àà subsets gen ‚áí
              (lam (l ‚à© s) + lam ((space gen DIFF l) ‚à© s) = lam s)}

   [m_space_def]  Definition

      |- ‚àÄsp sts mu. m_space (sp,sts,mu) = sp

   [measurable_def]  Definition

      |- ‚àÄa b.
           measurable a b =
           {f |
            sigma_algebra a ‚àß sigma_algebra b ‚àß f ‚àà (space a -> space b) ‚àß
            ‚àÄs. s ‚àà subsets b ‚áí PREIMAGE f s ‚à© space a ‚àà subsets a}

   [measurable_sets_def]  Definition

      |- ‚àÄsp sts mu. measurable_sets (sp,sts,mu) = sts

   [measure_def]  Definition

      |- ‚àÄsp sts mu. measure (sp,sts,mu) = mu

   [measure_preserving_def]  Definition

      |- ‚àÄm1 m2.
           measure_preserving m1 m2 =
           {f |
            f ‚àà
            measurable (m_space m1,measurable_sets m1)
              (m_space m2,measurable_sets m2) ‚àß measure_space m1 ‚àß
            measure_space m2 ‚àß
            ‚àÄs.
              s ‚àà measurable_sets m2 ‚áí
              (measure m1 (PREIMAGE f s ‚à© m_space m1) = measure m2 s)}

   [measure_space_def]  Definition

      |- ‚àÄm.
           measure_space m ‚áî
           sigma_algebra (m_space m,measurable_sets m) ‚àß positive m ‚àß
           countably_additive m

   [null_set_def]  Definition

      |- ‚àÄm s. null_set m s ‚áî s ‚àà measurable_sets m ‚àß (measure m s = 0)

   [outer_measure_space_def]  Definition

      |- ‚àÄm.
           outer_measure_space m ‚áî
           positive m ‚àß increasing m ‚àß countably_subadditive m

   [pos_simple_fn_def]  Definition

      |- ‚àÄm f s a x.
           pos_simple_fn m f s a x ‚áî
           (‚àÄt. 0 ‚â§ f t) ‚àß
           (‚àÄt.
              t ‚àà m_space m ‚áí
              (f t = SIGMA (Œªi. Normal (x i) * indicator_fn (a i) t) s)) ‚àß
           (‚àÄi. i ‚àà s ‚áí a i ‚àà measurable_sets m) ‚àß FINITE s ‚àß
           (‚àÄi. i ‚àà s ‚áí 0 ‚â§ x i) ‚àß
           (‚àÄi j. i ‚àà s ‚àß j ‚àà s ‚àß i ‚â† j ‚áí DISJOINT (a i) (a j)) ‚àß
           (BIGUNION (IMAGE a s) = m_space m)

   [positive_def]  Definition

      |- ‚àÄm.
           positive m ‚áî
           (measure m ‚àÖ = 0) ‚àß ‚àÄs. s ‚àà measurable_sets m ‚áí 0 ‚â§ measure m s

   [sigma_algebra_def]  Definition

      |- ‚àÄa.
           sigma_algebra a ‚áî
           algebra a ‚àß
           ‚àÄc. countable c ‚àß c ‚äÜ subsets a ‚áí BIGUNION c ‚àà subsets a

   [sigma_def]  Definition

      |- ‚àÄsp st.
           sigma sp st = (sp,BIGINTER {s | st ‚äÜ s ‚àß sigma_algebra (sp,s)})

   [smallest_closed_cdi_def]  Definition

      |- ‚àÄa.
           smallest_closed_cdi a =
           (space a,BIGINTER {b | subsets a ‚äÜ b ‚àß closed_cdi (space a,b)})

   [space_def]  Definition

      |- ‚àÄx y. space (x,y) = x

   [subadditive_def]  Definition

      |- ‚àÄm.
           subadditive m ‚áî
           ‚àÄs t.
             s ‚àà measurable_sets m ‚àß t ‚àà measurable_sets m ‚áí
             measure m (s ‚à™ t) ‚â§ measure m s + measure m t

   [subset_class_def]  Definition

      |- ‚àÄsp sts. subset_class sp sts ‚áî ‚àÄx. x ‚àà sts ‚áí x ‚äÜ sp

   [subsets_def]  Definition

      |- ‚àÄx y. subsets (x,y) = y

   [ADDITIVE]  Theorem

      |- ‚àÄm s t u.
           additive m ‚àß s ‚àà measurable_sets m ‚àß t ‚àà measurable_sets m ‚àß
           DISJOINT s t ‚àß (u = s ‚à™ t) ‚áí
           (measure m u = measure m s + measure m t)

   [ADDITIVE_INCREASING]  Theorem

      |- ‚àÄm.
           algebra (m_space m,measurable_sets m) ‚àß positive m ‚àß
           additive m ‚áí
           increasing m

   [ADDITIVE_SUM]  Theorem

      |- ‚àÄm f n.
           algebra (m_space m,measurable_sets m) ‚àß positive m ‚àß
           additive m ‚àß f ‚àà (ùïå(:num) -> measurable_sets m) ‚àß
           (‚àÄm n. m ‚â† n ‚áí DISJOINT (f m) (f n)) ‚áí
           (sum (0,n) (measure m o f) =
            measure m (BIGUNION (IMAGE f (count n))))

   [ALGEBRA_ALT_INTER]  Theorem

      |- ‚àÄa.
           algebra a ‚áî
           subset_class (space a) (subsets a) ‚àß ‚àÖ ‚àà subsets a ‚àß
           (‚àÄs. s ‚àà subsets a ‚áí space a DIFF s ‚àà subsets a) ‚àß
           ‚àÄs t. s ‚àà subsets a ‚àß t ‚àà subsets a ‚áí s ‚à© t ‚àà subsets a

   [ALGEBRA_COMPL]  Theorem

      |- ‚àÄa s. algebra a ‚àß s ‚àà subsets a ‚áí space a DIFF s ‚àà subsets a

   [ALGEBRA_DIFF]  Theorem

      |- ‚àÄa s t.
           algebra a ‚àß s ‚àà subsets a ‚àß t ‚àà subsets a ‚áí s DIFF t ‚àà subsets a

   [ALGEBRA_EMPTY]  Theorem

      |- ‚àÄa. algebra a ‚áí ‚àÖ ‚àà subsets a

   [ALGEBRA_FINITE_UNION]  Theorem

      |- ‚àÄa c.
           algebra a ‚àß FINITE c ‚àß c ‚äÜ subsets a ‚áí BIGUNION c ‚àà subsets a

   [ALGEBRA_INTER]  Theorem

      |- ‚àÄa s t.
           algebra a ‚àß s ‚àà subsets a ‚àß t ‚àà subsets a ‚áí s ‚à© t ‚àà subsets a

   [ALGEBRA_INTER_SPACE]  Theorem

      |- ‚àÄa s.
           algebra a ‚àß s ‚àà subsets a ‚áí
           (space a ‚à© s = s) ‚àß (s ‚à© space a = s)

   [ALGEBRA_SPACE]  Theorem

      |- ‚àÄa. algebra a ‚áí space a ‚àà subsets a

   [ALGEBRA_SUBSET_LAMBDA_SYSTEM]  Theorem

      |- ‚àÄm.
           algebra (m_space m,measurable_sets m) ‚àß positive m ‚àß
           increasing m ‚àß additive m ‚áí
           measurable_sets m ‚äÜ
           lambda_system (m_space m,POW (m_space m)) (inf_measure m)

   [ALGEBRA_UNION]  Theorem

      |- ‚àÄa s t.
           algebra a ‚àß s ‚àà subsets a ‚àß t ‚àà subsets a ‚áí s ‚à™ t ‚àà subsets a

   [BIGUNION_IMAGE_Q]  Theorem

      |- ‚àÄa f.
           sigma_algebra a ‚àß f ‚àà (Q_set -> subsets a) ‚áí
           BIGUNION (IMAGE f Q_set) ‚àà subsets a

   [BOREL_MEASURABLE_SETS]  Theorem

      |- (‚àÄc. {x | x < c} ‚àà subsets Borel) ‚àß
         (‚àÄc. {x | c ‚â§ x} ‚àà subsets Borel) ‚àß
         (‚àÄc. {x | c < x} ‚àà subsets Borel) ‚àß
         (‚àÄc. {x | x ‚â§ c} ‚àà subsets Borel) ‚àß
         (‚àÄc d. {x | c < x ‚àß x < d} ‚àà subsets Borel) ‚àß
         (‚àÄc d. {x | c ‚â§ x ‚àß x < d} ‚àà subsets Borel) ‚àß
         (‚àÄc d. {x | c < x ‚àß x ‚â§ d} ‚àà subsets Borel) ‚àß
         (‚àÄc d. {x | c ‚â§ x ‚àß x ‚â§ d} ‚àà subsets Borel) ‚àß
         (‚àÄc. {c} ‚àà subsets Borel) ‚àß ‚àÄc. {x | x ‚â† c} ‚àà subsets Borel

   [BOREL_MEASURABLE_SETS1]  Theorem

      |- ‚àÄc. {x | x < c} ‚àà subsets Borel

   [BOREL_MEASURABLE_SETS10]  Theorem

      |- ‚àÄc. {x | x ‚â† c} ‚àà subsets Borel

   [BOREL_MEASURABLE_SETS2]  Theorem

      |- ‚àÄc. {x | c ‚â§ x} ‚àà subsets Borel

   [BOREL_MEASURABLE_SETS3]  Theorem

      |- ‚àÄc. {x | x ‚â§ c} ‚àà subsets Borel

   [BOREL_MEASURABLE_SETS4]  Theorem

      |- ‚àÄc. {x | c < x} ‚àà subsets Borel

   [BOREL_MEASURABLE_SETS5]  Theorem

      |- ‚àÄc d. {x | c ‚â§ x ‚àß x < d} ‚àà subsets Borel

   [BOREL_MEASURABLE_SETS6]  Theorem

      |- ‚àÄc d. {x | c < x ‚àß x ‚â§ d} ‚àà subsets Borel

   [BOREL_MEASURABLE_SETS7]  Theorem

      |- ‚àÄc d. {x | c ‚â§ x ‚àß x ‚â§ d} ‚àà subsets Borel

   [BOREL_MEASURABLE_SETS8]  Theorem

      |- ‚àÄc d. {x | c < x ‚àß x < d} ‚àà subsets Borel

   [BOREL_MEASURABLE_SETS9]  Theorem

      |- ‚àÄc. {c} ‚àà subsets Borel

   [CARATHEODORY]  Theorem

      |- ‚àÄm0.
           algebra (m_space m0,measurable_sets m0) ‚àß positive m0 ‚àß
           countably_additive m0 ‚áí
           ‚àÉm.
             (‚àÄs. s ‚àà measurable_sets m0 ‚áí (measure m s = measure m0 s)) ‚àß
             ((m_space m,measurable_sets m) =
              sigma (m_space m0) (measurable_sets m0)) ‚àß measure_space m

   [CARATHEODORY_LEMMA]  Theorem

      |- ‚àÄgsig lam.
           sigma_algebra gsig ‚àß
           outer_measure_space (space gsig,subsets gsig,lam) ‚áí
           measure_space (space gsig,lambda_system gsig lam,lam)

   [CLOSED_CDI_COMPL]  Theorem

      |- ‚àÄp s. closed_cdi p ‚àß s ‚àà subsets p ‚áí space p DIFF s ‚àà subsets p

   [CLOSED_CDI_DISJOINT]  Theorem

      |- ‚àÄp f.
           closed_cdi p ‚àß f ‚àà (ùïå(:num) -> subsets p) ‚àß
           (‚àÄm n. m ‚â† n ‚áí DISJOINT (f m) (f n)) ‚áí
           BIGUNION (IMAGE f ùïå(:num)) ‚àà subsets p

   [CLOSED_CDI_DUNION]  Theorem

      |- ‚àÄp s t.
           ‚àÖ ‚àà subsets p ‚àß closed_cdi p ‚àß s ‚àà subsets p ‚àß t ‚àà subsets p ‚àß
           DISJOINT s t ‚áí
           s ‚à™ t ‚àà subsets p

   [CLOSED_CDI_INCREASING]  Theorem

      |- ‚àÄp f.
           closed_cdi p ‚àß f ‚àà (ùïå(:num) -> subsets p) ‚àß (f 0 = ‚àÖ) ‚àß
           (‚àÄn. f n ‚äÜ f (SUC n)) ‚áí
           BIGUNION (IMAGE f ùïå(:num)) ‚àà subsets p

   [COUNTABLY_ADDITIVE]  Theorem

      |- ‚àÄm s f.
           countably_additive m ‚àß f ‚àà (ùïå(:num) -> measurable_sets m) ‚àß
           (‚àÄm n. m ‚â† n ‚áí DISJOINT (f m) (f n)) ‚àß
           (s = BIGUNION (IMAGE f ùïå(:num))) ‚àß s ‚àà measurable_sets m ‚áí
           measure m o f sums measure m s

   [COUNTABLY_ADDITIVE_ADDITIVE]  Theorem

      |- ‚àÄm.
           algebra (m_space m,measurable_sets m) ‚àß positive m ‚àß
           countably_additive m ‚áí
           additive m

   [COUNTABLY_SUBADDITIVE]  Theorem

      |- ‚àÄm f s.
           countably_subadditive m ‚àß f ‚àà (ùïå(:num) -> measurable_sets m) ‚àß
           summable (measure m o f) ‚àß (s = BIGUNION (IMAGE f ùïå(:num))) ‚àß
           s ‚àà measurable_sets m ‚áí
           measure m s ‚â§ suminf (measure m o f)

   [COUNTABLY_SUBADDITIVE_SUBADDITIVE]  Theorem

      |- ‚àÄm.
           algebra (m_space m,measurable_sets m) ‚àß positive m ‚àß
           countably_subadditive m ‚áí
           subadditive m

   [FN_MINUS_ADD_LE]  Theorem

      |- ‚àÄf g x. fn_minus (Œªx. f x + g x) x ‚â§ fn_minus f x + fn_minus g x

   [FN_MINUS_CMUL]  Theorem

      |- ‚àÄf c.
           (0 ‚â§ c ‚áí
            (fn_minus (Œªx. Normal c * f x) =
             (Œªx. Normal c * fn_minus f x))) ‚àß
           (c ‚â§ 0 ‚áí
            (fn_minus (Œªx. Normal c * f x) =
             (Œªx. -Normal c * fn_plus f x)))

   [FN_MINUS_POS]  Theorem

      |- ‚àÄg x. 0 ‚â§ fn_minus g x

   [FN_MINUS_POS_ZERO]  Theorem

      |- (‚àÄx. 0 ‚â§ g x) ‚áí (fn_minus g = (Œªx. 0))

   [FN_PLUS_ADD_LE]  Theorem

      |- ‚àÄf g x. fn_plus (Œªx. f x + g x) x ‚â§ fn_plus f x + fn_plus g x

   [FN_PLUS_CMUL]  Theorem

      |- ‚àÄf c.
           (0 ‚â§ c ‚áí
            (fn_plus (Œªx. Normal c * f x) =
             (Œªx. Normal c * fn_plus f x))) ‚àß
           (c ‚â§ 0 ‚áí
            (fn_plus (Œªx. Normal c * f x) =
             (Œªx. -Normal c * fn_minus f x)))

   [FN_PLUS_POS]  Theorem

      |- ‚àÄg x. 0 ‚â§ fn_plus g x

   [FN_PLUS_POS_ID]  Theorem

      |- (‚àÄx. 0 ‚â§ g x) ‚áí (fn_plus g = g)

   [IMAGE_SING]  Theorem

      |- ‚àÄf x. IMAGE f {x} = {f x}

   [INCREASING]  Theorem

      |- ‚àÄm s t.
           increasing m ‚àß s ‚äÜ t ‚àß s ‚àà measurable_sets m ‚àß
           t ‚àà measurable_sets m ‚áí
           measure m s ‚â§ measure m t

   [INCREASING_ADDITIVE_SUMMABLE]  Theorem

      |- ‚àÄm f.
           algebra (m_space m,measurable_sets m) ‚àß positive m ‚àß
           increasing m ‚àß additive m ‚àß f ‚àà (ùïå(:num) -> measurable_sets m) ‚àß
           (‚àÄm n. m ‚â† n ‚áí DISJOINT (f m) (f n)) ‚áí
           summable (measure m o f)

   [INDICATOR_FN_MUL_INTER]  Theorem

      |- ‚àÄA B.
           (Œªt. indicator_fn A t * indicator_fn B t) =
           (Œªt. indicator_fn (A ‚à© B) t)

   [INF_MEASURE_AGREES]  Theorem

      |- ‚àÄm s.
           algebra (m_space m,measurable_sets m) ‚àß positive m ‚àß
           countably_additive m ‚àß s ‚àà measurable_sets m ‚áí
           (inf_measure m s = measure m s)

   [INF_MEASURE_CLOSE]  Theorem

      |- ‚àÄm s e.
           algebra (m_space m,measurable_sets m) ‚àß positive m ‚àß 0 < e ‚àß
           s ‚äÜ m_space m ‚áí
           ‚àÉf l.
             f ‚àà (ùïå(:num) -> measurable_sets m) ‚àß
             s ‚äÜ BIGUNION (IMAGE f ùïå(:num)) ‚àß
             (‚àÄm n. m ‚â† n ‚áí DISJOINT (f m) (f n)) ‚àß measure m o f sums l ‚àß
             l ‚â§ inf_measure m s + e

   [INF_MEASURE_COUNTABLY_SUBADDITIVE]  Theorem

      |- ‚àÄm.
           algebra (m_space m,measurable_sets m) ‚àß positive m ‚àß
           increasing m ‚áí
           countably_subadditive (m_space m,POW (m_space m),inf_measure m)

   [INF_MEASURE_EMPTY]  Theorem

      |- ‚àÄm.
           algebra (m_space m,measurable_sets m) ‚àß positive m ‚áí
           (inf_measure m ‚àÖ = 0)

   [INF_MEASURE_INCREASING]  Theorem

      |- ‚àÄm.
           algebra (m_space m,measurable_sets m) ‚àß positive m ‚áí
           increasing (m_space m,POW (m_space m),inf_measure m)

   [INF_MEASURE_LE]  Theorem

      |- ‚àÄm s x.
           algebra (m_space m,measurable_sets m) ‚àß positive m ‚àß
           increasing m ‚àß
           x ‚àà
           {r |
            ‚àÉf.
              f ‚àà (ùïå(:num) -> measurable_sets m) ‚àß
              s ‚äÜ BIGUNION (IMAGE f ùïå(:num)) ‚àß measure m o f sums r} ‚áí
           inf_measure m s ‚â§ x

   [INF_MEASURE_NONEMPTY]  Theorem

      |- ‚àÄm g s.
           algebra (m_space m,measurable_sets m) ‚àß positive m ‚àß
           s ‚àà measurable_sets m ‚àß g ‚äÜ s ‚áí
           measure m s ‚àà
           {r |
            ‚àÉf.
              f ‚àà (ùïå(:num) -> measurable_sets m) ‚àß
              (‚àÄm n. m ‚â† n ‚áí DISJOINT (f m) (f n)) ‚àß
              g ‚äÜ BIGUNION (IMAGE f ùïå(:num)) ‚àß measure m o f sums r}

   [INF_MEASURE_OUTER]  Theorem

      |- ‚àÄm.
           algebra (m_space m,measurable_sets m) ‚àß positive m ‚àß
           increasing m ‚áí
           outer_measure_space (m_space m,POW (m_space m),inf_measure m)

   [INF_MEASURE_POS]  Theorem

      |- ‚àÄm g.
           algebra (m_space m,measurable_sets m) ‚àß positive m ‚àß
           g ‚äÜ m_space m ‚áí
           0 ‚â§ inf_measure m g

   [INF_MEASURE_POS0]  Theorem

      |- ‚àÄm g x.
           algebra (m_space m,measurable_sets m) ‚àß positive m ‚àß
           x ‚àà
           {r |
            ‚àÉf.
              f ‚àà (ùïå(:num) -> measurable_sets m) ‚àß
              (‚àÄm n. m ‚â† n ‚áí DISJOINT (f m) (f n)) ‚àß
              g ‚äÜ BIGUNION (IMAGE f ùïå(:num)) ‚àß measure m o f sums r} ‚áí
           0 ‚â§ x

   [INF_MEASURE_POSITIVE]  Theorem

      |- ‚àÄm.
           algebra (m_space m,measurable_sets m) ‚àß positive m ‚áí
           positive (m_space m,POW (m_space m),inf_measure m)

   [IN_MEASURABLE]  Theorem

      |- ‚àÄa b f.
           f ‚àà measurable a b ‚áî
           sigma_algebra a ‚àß sigma_algebra b ‚àß f ‚àà (space a -> space b) ‚àß
           ‚àÄs. s ‚àà subsets b ‚áí PREIMAGE f s ‚à© space a ‚àà subsets a

   [IN_MEASURABLE_BOREL]  Theorem

      |- ‚àÄf a.
           f ‚àà measurable a Borel ‚áî
           sigma_algebra a ‚àß f ‚àà (space a -> ùïå(:extreal)) ‚àß
           ‚àÄc. {x | f x < c} ‚à© space a ‚àà subsets a

   [IN_MEASURABLE_BOREL_ABS]  Theorem

      |- ‚àÄa f g.
           sigma_algebra a ‚àß f ‚àà measurable a Borel ‚àß
           (‚àÄx. x ‚àà space a ‚áí (g x = abs (f x))) ‚áí
           g ‚àà measurable a Borel

   [IN_MEASURABLE_BOREL_ADD]  Theorem

      |- ‚àÄa f g h.
           sigma_algebra a ‚àß f ‚àà measurable a Borel ‚àß
           g ‚àà measurable a Borel ‚àß (‚àÄx. x ‚àà space a ‚áí (h x = f x + g x)) ‚áí
           h ‚àà measurable a Borel

   [IN_MEASURABLE_BOREL_ALL]  Theorem

      |- ‚àÄf a.
           f ‚àà measurable a Borel ‚áí
           (‚àÄc. {x | f x < c} ‚à© space a ‚àà subsets a) ‚àß
           (‚àÄc. {x | c ‚â§ f x} ‚à© space a ‚àà subsets a) ‚àß
           (‚àÄc. {x | f x ‚â§ c} ‚à© space a ‚àà subsets a) ‚àß
           (‚àÄc. {x | c < f x} ‚à© space a ‚àà subsets a) ‚àß
           (‚àÄc d. {x | c < f x ‚àß f x < d} ‚à© space a ‚àà subsets a) ‚àß
           (‚àÄc d. {x | c ‚â§ f x ‚àß f x < d} ‚à© space a ‚àà subsets a) ‚àß
           (‚àÄc d. {x | c < f x ‚àß f x ‚â§ d} ‚à© space a ‚àà subsets a) ‚àß
           (‚àÄc d. {x | c ‚â§ f x ‚àß f x ‚â§ d} ‚à© space a ‚àà subsets a) ‚àß
           (‚àÄc. {x | f x ‚â† c} ‚à© space a ‚àà subsets a) ‚àß
           ‚àÄc. {x | f x = c} ‚à© space a ‚àà subsets a

   [IN_MEASURABLE_BOREL_ALL_MEASURE]  Theorem

      |- ‚àÄf m.
           f ‚àà measurable (m_space m,measurable_sets m) Borel ‚áí
           (‚àÄc. {x | f x < c} ‚à© m_space m ‚àà measurable_sets m) ‚àß
           (‚àÄc. {x | c ‚â§ f x} ‚à© m_space m ‚àà measurable_sets m) ‚àß
           (‚àÄc. {x | f x ‚â§ c} ‚à© m_space m ‚àà measurable_sets m) ‚àß
           (‚àÄc. {x | c < f x} ‚à© m_space m ‚àà measurable_sets m) ‚àß
           (‚àÄc d.
              {x | c < f x ‚àß f x < d} ‚à© m_space m ‚àà measurable_sets m) ‚àß
           (‚àÄc d.
              {x | c ‚â§ f x ‚àß f x < d} ‚à© m_space m ‚àà measurable_sets m) ‚àß
           (‚àÄc d.
              {x | c < f x ‚àß f x ‚â§ d} ‚à© m_space m ‚àà measurable_sets m) ‚àß
           (‚àÄc d.
              {x | c ‚â§ f x ‚àß f x ‚â§ d} ‚à© m_space m ‚àà measurable_sets m) ‚àß
           (‚àÄc. {x | f x = c} ‚à© m_space m ‚àà measurable_sets m) ‚àß
           ‚àÄc. {x | f x ‚â† c} ‚à© m_space m ‚àà measurable_sets m

   [IN_MEASURABLE_BOREL_ALT1]  Theorem

      |- ‚àÄf a.
           f ‚àà measurable a Borel ‚áî
           sigma_algebra a ‚àß f ‚àà (space a -> ùïå(:extreal)) ‚àß
           ‚àÄc. {x | c ‚â§ f x} ‚à© space a ‚àà subsets a

   [IN_MEASURABLE_BOREL_ALT2]  Theorem

      |- ‚àÄf a.
           f ‚àà measurable a Borel ‚áî
           sigma_algebra a ‚àß f ‚àà (space a -> ùïå(:extreal)) ‚àß
           ‚àÄc. {x | f x ‚â§ c} ‚à© space a ‚àà subsets a

   [IN_MEASURABLE_BOREL_ALT3]  Theorem

      |- ‚àÄf a.
           f ‚àà measurable a Borel ‚áî
           sigma_algebra a ‚àß f ‚àà (space a -> ùïå(:extreal)) ‚àß
           ‚àÄc. {x | c < f x} ‚à© space a ‚àà subsets a

   [IN_MEASURABLE_BOREL_ALT4]  Theorem

      |- ‚àÄf a.
           f ‚àà measurable a Borel ‚áî
           sigma_algebra a ‚àß f ‚àà (space a -> ùïå(:extreal)) ‚àß
           ‚àÄc d. {x | c ‚â§ f x ‚àß f x < d} ‚à© space a ‚àà subsets a

   [IN_MEASURABLE_BOREL_ALT5]  Theorem

      |- ‚àÄf a.
           f ‚àà measurable a Borel ‚áî
           sigma_algebra a ‚àß f ‚àà (space a -> ùïå(:extreal)) ‚àß
           ‚àÄc d. {x | c < f x ‚àß f x ‚â§ d} ‚à© space a ‚àà subsets a

   [IN_MEASURABLE_BOREL_ALT6]  Theorem

      |- ‚àÄf a.
           f ‚àà measurable a Borel ‚áî
           sigma_algebra a ‚àß f ‚àà (space a -> ùïå(:extreal)) ‚àß
           ‚àÄc d. {x | c ‚â§ f x ‚àß f x ‚â§ d} ‚à© space a ‚àà subsets a

   [IN_MEASURABLE_BOREL_ALT7]  Theorem

      |- ‚àÄf a.
           f ‚àà measurable a Borel ‚áí
           sigma_algebra a ‚àß f ‚àà (space a -> ùïå(:extreal)) ‚àß
           ‚àÄc d. {x | c < f x ‚àß f x < d} ‚à© space a ‚àà subsets a

   [IN_MEASURABLE_BOREL_ALT8]  Theorem

      |- ‚àÄf a.
           f ‚àà measurable a Borel ‚áí
           sigma_algebra a ‚àß f ‚àà (space a -> ùïå(:extreal)) ‚àß
           ‚àÄc. {x | f x = c} ‚à© space a ‚àà subsets a

   [IN_MEASURABLE_BOREL_ALT9]  Theorem

      |- ‚àÄf a.
           f ‚àà measurable a Borel ‚áí
           sigma_algebra a ‚àß f ‚àà (space a -> ùïå(:extreal)) ‚àß
           ‚àÄc. {x | f x ‚â† c} ‚à© space a ‚àà subsets a

   [IN_MEASURABLE_BOREL_CMUL]  Theorem

      |- ‚àÄa f g z.
           sigma_algebra a ‚àß f ‚àà measurable a Borel ‚àß
           (‚àÄx. x ‚àà space a ‚áí (g x = Normal z * f x)) ‚áí
           g ‚àà measurable a Borel

   [IN_MEASURABLE_BOREL_CMUL_INDICATOR]  Theorem

      |- ‚àÄa z s.
           sigma_algebra a ‚àß s ‚àà subsets a ‚áí
           (Œªx. Normal z * indicator_fn s x) ‚àà measurable a Borel

   [IN_MEASURABLE_BOREL_CONST]  Theorem

      |- ‚àÄa k f.
           sigma_algebra a ‚àß (‚àÄx. x ‚àà space a ‚áí (f x = k)) ‚áí
           f ‚àà measurable a Borel

   [IN_MEASURABLE_BOREL_FN_MINUS]  Theorem

      |- ‚àÄa f. f ‚àà measurable a Borel ‚áí fn_minus f ‚àà measurable a Borel

   [IN_MEASURABLE_BOREL_FN_PLUS]  Theorem

      |- ‚àÄa f. f ‚àà measurable a Borel ‚áí fn_plus f ‚àà measurable a Borel

   [IN_MEASURABLE_BOREL_INDICATOR]  Theorem

      |- ‚àÄa A f.
           sigma_algebra a ‚àß A ‚àà subsets a ‚àß
           (‚àÄx. x ‚àà space a ‚áí (f x = indicator_fn A x)) ‚áí
           f ‚àà measurable a Borel

   [IN_MEASURABLE_BOREL_LE]  Theorem

      |- ‚àÄf g a.
           f ‚àà measurable a Borel ‚àß g ‚àà measurable a Borel ‚áí
           {x | f x ‚â§ g x} ‚à© space a ‚àà subsets a

   [IN_MEASURABLE_BOREL_LT]  Theorem

      |- ‚àÄf g a.
           f ‚àà measurable a Borel ‚àß g ‚àà measurable a Borel ‚áí
           {x | f x < g x} ‚à© space a ‚àà subsets a

   [IN_MEASURABLE_BOREL_MAX]  Theorem

      |- ‚àÄa f g.
           sigma_algebra a ‚àß f ‚àà measurable a Borel ‚àß
           g ‚àà measurable a Borel ‚áí
           (Œªx. max (f x) (g x)) ‚àà measurable a Borel

   [IN_MEASURABLE_BOREL_MONO_SUP]  Theorem

      |- ‚àÄfn f a.
           sigma_algebra a ‚àß (‚àÄn. fn n ‚àà measurable a Borel) ‚àß
           (‚àÄn x. x ‚àà space a ‚áí fn n x ‚â§ fn (SUC n) x) ‚àß
           (‚àÄx. x ‚àà space a ‚áí (f x = sup (IMAGE (Œªn. fn n x) ùïå(:num)))) ‚áí
           f ‚àà measurable a Borel

   [IN_MEASURABLE_BOREL_MUL]  Theorem

      |- ‚àÄa f g h.
           sigma_algebra a ‚àß f ‚àà measurable a Borel ‚àß
           (‚àÄx.
              x ‚àà space a ‚áí
              f x ‚â† NegInf ‚àß f x ‚â† PosInf ‚àß g x ‚â† NegInf ‚àß g x ‚â† PosInf) ‚àß
           g ‚àà measurable a Borel ‚àß (‚àÄx. x ‚àà space a ‚áí (h x = f x * g x)) ‚áí
           h ‚àà measurable a Borel

   [IN_MEASURABLE_BOREL_MUL_INDICATOR]  Theorem

      |- ‚àÄa f s.
           sigma_algebra a ‚àß f ‚àà measurable a Borel ‚àß s ‚àà subsets a ‚áí
           (Œªx. f x * indicator_fn s x) ‚àà measurable a Borel

   [IN_MEASURABLE_BOREL_MUL_INDICATOR_EQ]  Theorem

      |- ‚àÄa f.
           sigma_algebra a ‚áí
           (f ‚àà measurable a Borel ‚áî
            (Œªx. f x * indicator_fn (space a) x) ‚àà measurable a Borel)

   [IN_MEASURABLE_BOREL_NEGINF]  Theorem

      |- ‚àÄf a.
           f ‚àà measurable a Borel ‚áí
           {x | f x = NegInf} ‚à© space a ‚àà subsets a

   [IN_MEASURABLE_BOREL_PLUS_MINUS]  Theorem

      |- ‚àÄa f.
           f ‚àà measurable a Borel ‚áî
           fn_plus f ‚àà measurable a Borel ‚àß fn_minus f ‚àà measurable a Borel

   [IN_MEASURABLE_BOREL_POS_SIMPLE_FN]  Theorem

      |- ‚àÄm f.
           measure_space m ‚àß (‚àÉs a x. pos_simple_fn m f s a x) ‚áí
           f ‚àà measurable (m_space m,measurable_sets m) Borel

   [IN_MEASURABLE_BOREL_POW]  Theorem

      |- ‚àÄn a f.
           sigma_algebra a ‚àß f ‚àà measurable a Borel ‚àß
           (‚àÄx. x ‚àà space a ‚áí f x ‚â† NegInf ‚àß f x ‚â† PosInf) ‚áí
           (Œªx. f x pow n) ‚àà measurable a Borel

   [IN_MEASURABLE_BOREL_SQR]  Theorem

      |- ‚àÄa f g.
           sigma_algebra a ‚àß f ‚àà measurable a Borel ‚àß
           (‚àÄx. x ‚àà space a ‚áí (g x = f x pow 2)) ‚áí
           g ‚àà measurable a Borel

   [IN_MEASURABLE_BOREL_SUB]  Theorem

      |- ‚àÄa f g h.
           sigma_algebra a ‚àß f ‚àà measurable a Borel ‚àß
           g ‚àà measurable a Borel ‚àß (‚àÄx. x ‚àà space a ‚áí (h x = f x ‚àí g x)) ‚áí
           h ‚àà measurable a Borel

   [IN_MEASURABLE_BOREL_SUM]  Theorem

      |- ‚àÄa f g s.
           FINITE s ‚àß sigma_algebra a ‚àß
           (‚àÄi. i ‚àà s ‚áí f i ‚àà measurable a Borel) ‚àß
           (‚àÄx. x ‚àà space a ‚áí (g x = SIGMA (Œªi. f i x) s)) ‚áí
           g ‚àà measurable a Borel

   [IN_MEASURE_PRESERVING]  Theorem

      |- ‚àÄm1 m2 f.
           f ‚àà measure_preserving m1 m2 ‚áî
           f ‚àà
           measurable (m_space m1,measurable_sets m1)
             (m_space m2,measurable_sets m2) ‚àß measure_space m1 ‚àß
           measure_space m2 ‚àß
           ‚àÄs.
             s ‚àà measurable_sets m2 ‚áí
             (measure m1 (PREIMAGE f s ‚à© m_space m1) = measure m2 s)

   [IN_SIGMA]  Theorem

      |- ‚àÄsp a x. x ‚àà a ‚áí x ‚àà subsets (sigma sp a)

   [LAMBDA_SYSTEM_ADDITIVE]  Theorem

      |- ‚àÄg0 lam l1 l2.
           algebra g0 ‚àß positive (space g0,subsets g0,lam) ‚áí
           additive (space g0,lambda_system g0 lam,lam)

   [LAMBDA_SYSTEM_ALGEBRA]  Theorem

      |- ‚àÄg0 lam.
           algebra g0 ‚àß positive (space g0,subsets g0,lam) ‚áí
           algebra (space g0,lambda_system g0 lam)

   [LAMBDA_SYSTEM_CARATHEODORY]  Theorem

      |- ‚àÄgsig lam.
           sigma_algebra gsig ‚àß
           outer_measure_space (space gsig,subsets gsig,lam) ‚áí
           ‚àÄf.
             f ‚àà (ùïå(:num) -> lambda_system gsig lam) ‚àß
             (‚àÄm n. m ‚â† n ‚áí DISJOINT (f m) (f n)) ‚áí
             BIGUNION (IMAGE f ùïå(:num)) ‚àà lambda_system gsig lam ‚àß
             lam o f sums lam (BIGUNION (IMAGE f ùïå(:num)))

   [LAMBDA_SYSTEM_COMPL]  Theorem

      |- ‚àÄg0 lam l.
           algebra g0 ‚àß positive (space g0,subsets g0,lam) ‚àß
           l ‚àà lambda_system g0 lam ‚áí
           space g0 DIFF l ‚àà lambda_system g0 lam

   [LAMBDA_SYSTEM_EMPTY]  Theorem

      |- ‚àÄg0 lam.
           algebra g0 ‚àß positive (space g0,subsets g0,lam) ‚áí
           ‚àÖ ‚àà lambda_system g0 lam

   [LAMBDA_SYSTEM_INCREASING]  Theorem

      |- ‚àÄg0 lam.
           increasing (space g0,subsets g0,lam) ‚áí
           increasing (space g0,lambda_system g0 lam,lam)

   [LAMBDA_SYSTEM_INTER]  Theorem

      |- ‚àÄg0 lam l1 l2.
           algebra g0 ‚àß positive (space g0,subsets g0,lam) ‚àß
           l1 ‚àà lambda_system g0 lam ‚àß l2 ‚àà lambda_system g0 lam ‚áí
           l1 ‚à© l2 ‚àà lambda_system g0 lam

   [LAMBDA_SYSTEM_POSITIVE]  Theorem

      |- ‚àÄg0 lam.
           positive (space g0,subsets g0,lam) ‚áí
           positive (space g0,lambda_system g0 lam,lam)

   [LAMBDA_SYSTEM_STRONG_ADDITIVE]  Theorem

      |- ‚àÄg0 lam g l1 l2.
           algebra g0 ‚àß positive (space g0,subsets g0,lam) ‚àß
           g ‚àà subsets g0 ‚àß DISJOINT l1 l2 ‚àß l1 ‚àà lambda_system g0 lam ‚àß
           l2 ‚àà lambda_system g0 lam ‚áí
           (lam ((l1 ‚à™ l2) ‚à© g) = lam (l1 ‚à© g) + lam (l2 ‚à© g))

   [LAMBDA_SYSTEM_STRONG_SUM]  Theorem

      |- ‚àÄg0 lam g f n.
           algebra g0 ‚àß positive (space g0,subsets g0,lam) ‚àß
           g ‚àà subsets g0 ‚àß f ‚àà (ùïå(:num) -> lambda_system g0 lam) ‚àß
           (‚àÄm n. m ‚â† n ‚áí DISJOINT (f m) (f n)) ‚áí
           (sum (0,n) (lam o (Œªs. s ‚à© g) o f) =
            lam (BIGUNION (IMAGE f (count n)) ‚à© g))

   [MEASUBABLE_BIGUNION_LEMMA]  Theorem

      |- ‚àÄa b f.
           sigma_algebra a ‚àß sigma_algebra b ‚àß f ‚àà (space a -> space b) ‚àß
           (‚àÄs. s ‚àà subsets b ‚áí PREIMAGE f s ‚àà subsets a) ‚áí
           ‚àÄc.
             countable c ‚àß c ‚äÜ IMAGE (PREIMAGE f) (subsets b) ‚áí
             BIGUNION c ‚àà IMAGE (PREIMAGE f) (subsets b)

   [MEASURABLE_BIGUNION_PROPERTY]  Theorem

      |- ‚àÄa b f.
           sigma_algebra a ‚àß sigma_algebra b ‚àß f ‚àà (space a -> space b) ‚àß
           (‚àÄs. s ‚àà subsets b ‚áí PREIMAGE f s ‚àà subsets a) ‚áí
           ‚àÄc.
             c ‚äÜ subsets b ‚áí
             (PREIMAGE f (BIGUNION c) = BIGUNION (IMAGE (PREIMAGE f) c))

   [MEASURABLE_BOREL]  Theorem

      |- ‚àÄf a.
           f ‚àà measurable a Borel ‚áî
           sigma_algebra a ‚àß f ‚àà (space a -> ùïå(:extreal)) ‚àß
           ‚àÄc. PREIMAGE f {x | x < c} ‚à© space a ‚àà subsets a

   [MEASURABLE_COMP]  Theorem

      |- ‚àÄf g a b c.
           f ‚àà measurable a b ‚àß g ‚àà measurable b c ‚áí g o f ‚àà measurable a c

   [MEASURABLE_COMP_STRONG]  Theorem

      |- ‚àÄf g a b c.
           f ‚àà measurable a b ‚àß sigma_algebra c ‚àß
           g ‚àà (space b -> space c) ‚àß
           (‚àÄx.
              x ‚àà subsets c ‚áí
              PREIMAGE g x ‚à© IMAGE f (space a) ‚àà subsets b) ‚áí
           g o f ‚àà measurable a c

   [MEASURABLE_COMP_STRONGER]  Theorem

      |- ‚àÄf g a b c t.
           f ‚àà measurable a b ‚àß sigma_algebra c ‚àß
           g ‚àà (space b -> space c) ‚àß IMAGE f (space a) ‚äÜ t ‚àß
           (‚àÄs. s ‚àà subsets c ‚áí PREIMAGE g s ‚à© t ‚àà subsets b) ‚áí
           g o f ‚àà measurable a c

   [MEASURABLE_DIFF_PROPERTY]  Theorem

      |- ‚àÄa b f.
           sigma_algebra a ‚àß sigma_algebra b ‚àß f ‚àà (space a -> space b) ‚àß
           (‚àÄs. s ‚àà subsets b ‚áí PREIMAGE f s ‚àà subsets a) ‚áí
           ‚àÄs.
             s ‚àà subsets b ‚áí
             (PREIMAGE f (space b DIFF s) = space a DIFF PREIMAGE f s)

   [MEASURABLE_I]  Theorem

      |- ‚àÄa. sigma_algebra a ‚áí I ‚àà measurable a a

   [MEASURABLE_LIFT]  Theorem

      |- ‚àÄf a b.
           f ‚àà measurable a b ‚áí
           f ‚àà measurable a (sigma (space b) (subsets b))

   [MEASURABLE_POW_TO_POW]  Theorem

      |- ‚àÄm f.
           measure_space m ‚àß (measurable_sets m = POW (m_space m)) ‚áí
           f ‚àà measurable (m_space m,measurable_sets m) (ùïå(:Œ≤),POW ùïå(:Œ≤))

   [MEASURABLE_POW_TO_POW_IMAGE]  Theorem

      |- ‚àÄm f.
           measure_space m ‚àß (measurable_sets m = POW (m_space m)) ‚áí
           f ‚àà
           measurable (m_space m,measurable_sets m)
             (IMAGE f (m_space m),POW (IMAGE f (m_space m)))

   [MEASURABLE_PROD_SIGMA]  Theorem

      |- ‚àÄa a1 a2 f.
           sigma_algebra a ‚àß FST o f ‚àà measurable a a1 ‚àß
           SND o f ‚àà measurable a a2 ‚áí
           f ‚àà
           measurable a
             (sigma (space a1 √ó space a2)
                (prod_sets (subsets a1) (subsets a2)))

   [MEASURABLE_RANGE_REDUCE]  Theorem

      |- ‚àÄm f s.
           measure_space m ‚àß
           f ‚àà measurable (m_space m,measurable_sets m) (s,POW s) ‚àß s ‚â† ‚àÖ ‚áí
           f ‚àà
           measurable (m_space m,measurable_sets m)
             (s ‚à© IMAGE f (m_space m),POW (s ‚à© IMAGE f (m_space m)))

   [MEASURABLE_SETS_SUBSET_SPACE]  Theorem

      |- ‚àÄm s. measure_space m ‚àß s ‚àà measurable_sets m ‚áí s ‚äÜ m_space m

   [MEASURABLE_SIGMA]  Theorem

      |- ‚àÄf a b sp.
           sigma_algebra a ‚àß subset_class sp b ‚àß f ‚àà (space a -> sp) ‚àß
           (‚àÄs. s ‚àà b ‚áí PREIMAGE f s ‚à© space a ‚àà subsets a) ‚áí
           f ‚àà measurable a (sigma sp b)

   [MEASURABLE_SIGMA_PREIMAGES]  Theorem

      |- ‚àÄa b f.
           sigma_algebra a ‚àß sigma_algebra b ‚àß f ‚àà (space a -> space b) ‚àß
           (‚àÄs. s ‚àà subsets b ‚áí PREIMAGE f s ‚àà subsets a) ‚áí
           sigma_algebra (space a,IMAGE (PREIMAGE f) (subsets b))

   [MEASURABLE_SUBSET]  Theorem

      |- ‚àÄa b. measurable a b ‚äÜ measurable a (sigma (space b) (subsets b))

   [MEASURABLE_UP_LIFT]  Theorem

      |- ‚àÄsp a b c f.
           f ‚àà measurable (sp,a) c ‚àß sigma_algebra (sp,b) ‚àß a ‚äÜ b ‚áí
           f ‚àà measurable (sp,b) c

   [MEASURABLE_UP_SIGMA]  Theorem

      |- ‚àÄa b. measurable a b ‚äÜ measurable (sigma (space a) (subsets a)) b

   [MEASURABLE_UP_SUBSET]  Theorem

      |- ‚àÄsp a b c.
           a ‚äÜ b ‚àß sigma_algebra (sp,b) ‚áí
           measurable (sp,a) c ‚äÜ measurable (sp,b) c

   [MEASURE_ADDITIVE]  Theorem

      |- ‚àÄm s t u.
           measure_space m ‚àß s ‚àà measurable_sets m ‚àß
           t ‚àà measurable_sets m ‚àß DISJOINT s t ‚àß (u = s ‚à™ t) ‚áí
           (measure m u = measure m s + measure m t)

   [MEASURE_COMPL]  Theorem

      |- ‚àÄm s.
           measure_space m ‚àß s ‚àà measurable_sets m ‚áí
           (measure m (m_space m DIFF s) =
            measure m (m_space m) ‚àí measure m s)

   [MEASURE_COMPL_SUBSET]  Theorem

      |- ‚àÄm s.
           measure_space m ‚àß s ‚àà measurable_sets m ‚àß
           t ‚àà measurable_sets m ‚àß t ‚äÜ s ‚áí
           (measure m (s DIFF t) = measure m s ‚àí measure m t)

   [MEASURE_COUNTABLE_INCREASING]  Theorem

      |- ‚àÄm s f.
           measure_space m ‚àß f ‚àà (ùïå(:num) -> measurable_sets m) ‚àß
           (f 0 = ‚àÖ) ‚àß (‚àÄn. f n ‚äÜ f (SUC n)) ‚àß
           (s = BIGUNION (IMAGE f ùïå(:num))) ‚áí
           measure m o f --> measure m s

   [MEASURE_COUNTABLY_ADDITIVE]  Theorem

      |- ‚àÄm s f.
           measure_space m ‚àß f ‚àà (ùïå(:num) -> measurable_sets m) ‚àß
           (‚àÄm n. m ‚â† n ‚áí DISJOINT (f m) (f n)) ‚àß
           (s = BIGUNION (IMAGE f ùïå(:num))) ‚áí
           measure m o f sums measure m s

   [MEASURE_DOWN]  Theorem

      |- ‚àÄm0 m1.
           sigma_algebra (m_space m0,measurable_sets m0) ‚àß
           measurable_sets m0 ‚äÜ measurable_sets m1 ‚àß
           (measure m0 = measure m1) ‚àß measure_space m1 ‚áí
           measure_space m0

   [MEASURE_EMPTY]  Theorem

      |- ‚àÄm. measure_space m ‚áí (measure m ‚àÖ = 0)

   [MEASURE_PRESERVING_LIFT]  Theorem

      |- ‚àÄm1 m2 a f.
           measure_space m1 ‚àß measure_space m2 ‚àß
           (measurable_sets m2 = subsets (sigma (m_space m2) a)) ‚àß
           f ‚àà measure_preserving m1 (m_space m2,a,measure m2) ‚áí
           f ‚àà measure_preserving m1 m2

   [MEASURE_PRESERVING_SUBSET]  Theorem

      |- ‚àÄm1 m2 a.
           measure_space m1 ‚àß measure_space m2 ‚àß
           (measurable_sets m2 = subsets (sigma (m_space m2) a)) ‚áí
           measure_preserving m1 (m_space m2,a,measure m2) ‚äÜ
           measure_preserving m1 m2

   [MEASURE_PRESERVING_UP_LIFT]  Theorem

      |- ‚àÄm1 m2 f.
           measure_space m1 ‚àß
           f ‚àà measure_preserving (m_space m1,a,measure m1) m2 ‚àß
           sigma_algebra (m_space m1,measurable_sets m1) ‚àß
           a ‚äÜ measurable_sets m1 ‚áí
           f ‚àà measure_preserving m1 m2

   [MEASURE_PRESERVING_UP_SIGMA]  Theorem

      |- ‚àÄm1 m2 a.
           measure_space m1 ‚àß
           (measurable_sets m1 = subsets (sigma (m_space m1) a)) ‚áí
           measure_preserving (m_space m1,a,measure m1) m2 ‚äÜ
           measure_preserving m1 m2

   [MEASURE_PRESERVING_UP_SUBSET]  Theorem

      |- ‚àÄm1 m2.
           measure_space m1 ‚àß a ‚äÜ measurable_sets m1 ‚àß
           sigma_algebra (m_space m1,measurable_sets m1) ‚áí
           measure_preserving (m_space m1,a,measure m1) m2 ‚äÜ
           measure_preserving m1 m2

   [MEASURE_REAL_SUM_IMAGE]  Theorem

      |- ‚àÄm s.
           measure_space m ‚àß s ‚àà measurable_sets m ‚àß
           (‚àÄx. x ‚àà s ‚áí {x} ‚àà measurable_sets m) ‚àß FINITE s ‚áí
           (measure m s = SIGMA (Œªx. measure m {x}) s)

   [MEASURE_SPACE_ADDITIVE]  Theorem

      |- ‚àÄm. measure_space m ‚áí additive m

   [MEASURE_SPACE_BIGINTER]  Theorem

      |- ‚àÄm s.
           measure_space m ‚àß (‚àÄn. s n ‚àà measurable_sets m) ‚áí
           BIGINTER (IMAGE s ùïå(:num)) ‚àà measurable_sets m

   [MEASURE_SPACE_BIGUNION]  Theorem

      |- ‚àÄm s.
           measure_space m ‚àß (‚àÄn. s n ‚àà measurable_sets m) ‚áí
           BIGUNION (IMAGE s ùïå(:num)) ‚àà measurable_sets m

   [MEASURE_SPACE_CMUL]  Theorem

      |- ‚àÄm c.
           measure_space m ‚àß 0 ‚â§ c ‚áí
           measure_space
             (m_space m,measurable_sets m,(Œªa. c * measure m a))

   [MEASURE_SPACE_DIFF]  Theorem

      |- ‚àÄm s t.
           measure_space m ‚àß s ‚àà measurable_sets m ‚àß
           t ‚àà measurable_sets m ‚áí
           s DIFF t ‚àà measurable_sets m

   [MEASURE_SPACE_EMPTY_MEASURABLE]  Theorem

      |- ‚àÄm. measure_space m ‚áí ‚àÖ ‚àà measurable_sets m

   [MEASURE_SPACE_INCREASING]  Theorem

      |- ‚àÄm. measure_space m ‚áí increasing m

   [MEASURE_SPACE_INTER]  Theorem

      |- ‚àÄm s t.
           measure_space m ‚àß s ‚àà measurable_sets m ‚àß
           t ‚àà measurable_sets m ‚áí
           s ‚à© t ‚àà measurable_sets m

   [MEASURE_SPACE_IN_MSPACE]  Theorem

      |- ‚àÄm A.
           measure_space m ‚àß A ‚àà measurable_sets m ‚áí
           ‚àÄx. x ‚àà A ‚áí x ‚àà m_space m

   [MEASURE_SPACE_MSPACE_MEASURABLE]  Theorem

      |- ‚àÄm. measure_space m ‚áí m_space m ‚àà measurable_sets m

   [MEASURE_SPACE_POSITIVE]  Theorem

      |- ‚àÄm. measure_space m ‚áí positive m

   [MEASURE_SPACE_REDUCE]  Theorem

      |- ‚àÄm. (m_space m,measurable_sets m,measure m) = m

   [MEASURE_SPACE_RESTRICTED]  Theorem

      |- ‚àÄm s.
           measure_space m ‚àß s ‚àà measurable_sets m ‚áí
           measure_space
             (s,IMAGE (Œªt. s ‚à© t) (measurable_sets m),measure m)

   [MEASURE_SPACE_SUBSET]  Theorem

      |- ‚àÄs s' m.
           s' ‚äÜ s ‚àß measure_space (s,POW s,m) ‚áí measure_space (s',POW s',m)

   [MEASURE_SPACE_SUBSET_MSPACE]  Theorem

      |- ‚àÄA m. measure_space m ‚àß A ‚àà measurable_sets m ‚áí A ‚äÜ m_space m

   [MEASURE_SPACE_UNION]  Theorem

      |- ‚àÄm s t.
           measure_space m ‚àß s ‚àà measurable_sets m ‚àß
           t ‚àà measurable_sets m ‚áí
           s ‚à™ t ‚àà measurable_sets m

   [MONOTONE_CONVERGENCE]  Theorem

      |- ‚àÄm s f.
           measure_space m ‚àß f ‚àà (ùïå(:num) -> measurable_sets m) ‚àß
           (‚àÄn. f n ‚äÜ f (SUC n)) ‚àß (s = BIGUNION (IMAGE f ùïå(:num))) ‚áí
           measure m o f --> measure m s

   [MONOTONE_CONVERGENCE2]  Theorem

      |- ‚àÄm f.
           measure_space m ‚àß f ‚àà (ùïå(:num) -> measurable_sets m) ‚àß
           (‚àÄn. f n ‚äÜ f (SUC n)) ‚áí
           measure m o f --> measure m (BIGUNION (IMAGE f ùïå(:num)))

   [MONOTONE_CONVERGENCE_BIGINTER]  Theorem

      |- ‚àÄm s f.
           measure_space m ‚àß f ‚àà (ùïå(:num) -> measurable_sets m) ‚àß
           (‚àÄn. f (SUC n) ‚äÜ f n) ‚àß (s = BIGINTER (IMAGE f ùïå(:num))) ‚áí
           measure m o f --> measure m s

   [MONOTONE_CONVERGENCE_BIGINTER2]  Theorem

      |- ‚àÄm f.
           measure_space m ‚àß f ‚àà (ùïå(:num) -> measurable_sets m) ‚àß
           (‚àÄn. f (SUC n) ‚äÜ f n) ‚áí
           measure m o f --> measure m (BIGINTER (IMAGE f ùïå(:num)))

   [OUTER_MEASURE_SPACE_POSITIVE]  Theorem

      |- ‚àÄm. outer_measure_space m ‚áí positive m

   [POW_ALGEBRA]  Theorem

      |- algebra (sp,POW sp)

   [POW_SIGMA_ALGEBRA]  Theorem

      |- sigma_algebra (sp,POW sp)

   [SIGMA_ALGEBRA]  Theorem

      |- ‚àÄp.
           sigma_algebra p ‚áî
           subset_class (space p) (subsets p) ‚àß ‚àÖ ‚àà subsets p ‚àß
           (‚àÄs. s ‚àà subsets p ‚áí space p DIFF s ‚àà subsets p) ‚àß
           ‚àÄc. countable c ‚àß c ‚äÜ subsets p ‚áí BIGUNION c ‚àà subsets p

   [SIGMA_ALGEBRA_ALGEBRA]  Theorem

      |- ‚àÄa. sigma_algebra a ‚áí algebra a

   [SIGMA_ALGEBRA_ALT]  Theorem

      |- ‚àÄa.
           sigma_algebra a ‚áî
           algebra a ‚àß
           ‚àÄf.
             f ‚àà (ùïå(:num) -> subsets a) ‚áí
             BIGUNION (IMAGE f ùïå(:num)) ‚àà subsets a

   [SIGMA_ALGEBRA_ALT_DISJOINT]  Theorem

      |- ‚àÄa.
           sigma_algebra a ‚áî
           algebra a ‚àß
           ‚àÄf.
             f ‚àà (ùïå(:num) -> subsets a) ‚àß
             (‚àÄm n. m ‚â† n ‚áí DISJOINT (f m) (f n)) ‚áí
             BIGUNION (IMAGE f ùïå(:num)) ‚àà subsets a

   [SIGMA_ALGEBRA_ALT_MONO]  Theorem

      |- ‚àÄa.
           sigma_algebra a ‚áî
           algebra a ‚àß
           ‚àÄf.
             f ‚àà (ùïå(:num) -> subsets a) ‚àß (f 0 = ‚àÖ) ‚àß
             (‚àÄn. f n ‚äÜ f (SUC n)) ‚áí
             BIGUNION (IMAGE f ùïå(:num)) ‚àà subsets a

   [SIGMA_ALGEBRA_BOREL]  Theorem

      |- sigma_algebra Borel

   [SIGMA_ALGEBRA_COUNTABLE_UNION]  Theorem

      |- ‚àÄa c.
           sigma_algebra a ‚àß countable c ‚àß c ‚äÜ subsets a ‚áí
           BIGUNION c ‚àà subsets a

   [SIGMA_ALGEBRA_ENUM]  Theorem

      |- ‚àÄa f.
           sigma_algebra a ‚àß f ‚àà (ùïå(:num) -> subsets a) ‚áí
           BIGUNION (IMAGE f ùïå(:num)) ‚àà subsets a

   [SIGMA_ALGEBRA_FN]  Theorem

      |- ‚àÄa.
           sigma_algebra a ‚áî
           subset_class (space a) (subsets a) ‚àß ‚àÖ ‚àà subsets a ‚àß
           (‚àÄs. s ‚àà subsets a ‚áí space a DIFF s ‚àà subsets a) ‚àß
           ‚àÄf.
             f ‚àà (ùïå(:num) -> subsets a) ‚áí
             BIGUNION (IMAGE f ùïå(:num)) ‚àà subsets a

   [SIGMA_ALGEBRA_FN_BIGINTER]  Theorem

      |- ‚àÄa.
           sigma_algebra a ‚áí
           subset_class (space a) (subsets a) ‚àß ‚àÖ ‚àà subsets a ‚àß
           (‚àÄs. s ‚àà subsets a ‚áí space a DIFF s ‚àà subsets a) ‚àß
           ‚àÄf.
             f ‚àà (ùïå(:num) -> subsets a) ‚áí
             BIGINTER (IMAGE f ùïå(:num)) ‚àà subsets a

   [SIGMA_ALGEBRA_FN_DISJOINT]  Theorem

      |- ‚àÄa.
           sigma_algebra a ‚áî
           subset_class (space a) (subsets a) ‚àß ‚àÖ ‚àà subsets a ‚àß
           (‚àÄs. s ‚àà subsets a ‚áí space a DIFF s ‚àà subsets a) ‚àß
           (‚àÄs t. s ‚àà subsets a ‚àß t ‚àà subsets a ‚áí s ‚à™ t ‚àà subsets a) ‚àß
           ‚àÄf.
             f ‚àà (ùïå(:num) -> subsets a) ‚àß
             (‚àÄm n. m ‚â† n ‚áí DISJOINT (f m) (f n)) ‚áí
             BIGUNION (IMAGE f ùïå(:num)) ‚àà subsets a

   [SIGMA_ALGEBRA_SIGMA]  Theorem

      |- ‚àÄsp sts. subset_class sp sts ‚áí sigma_algebra (sigma sp sts)

   [SIGMA_POW]  Theorem

      |- ‚àÄs. sigma s (POW s) = (s,POW s)

   [SIGMA_PROPERTY]  Theorem

      |- ‚àÄsp p a.
           subset_class sp p ‚àß ‚àÖ ‚àà p ‚àß a ‚äÜ p ‚àß
           (‚àÄs. s ‚àà p ‚à© subsets (sigma sp a) ‚áí sp DIFF s ‚àà p) ‚àß
           (‚àÄc.
              countable c ‚àß c ‚äÜ p ‚à© subsets (sigma sp a) ‚áí
              BIGUNION c ‚àà p) ‚áí
           subsets (sigma sp a) ‚äÜ p

   [SIGMA_PROPERTY_ALT]  Theorem

      |- ‚àÄsp p a.
           subset_class sp p ‚àß ‚àÖ ‚àà p ‚àß a ‚äÜ p ‚àß
           (‚àÄs. s ‚àà p ‚à© subsets (sigma sp a) ‚áí sp DIFF s ‚àà p) ‚àß
           (‚àÄf.
              f ‚àà (ùïå(:num) -> p ‚à© subsets (sigma sp a)) ‚áí
              BIGUNION (IMAGE f ùïå(:num)) ‚àà p) ‚áí
           subsets (sigma sp a) ‚äÜ p

   [SIGMA_PROPERTY_DISJOINT]  Theorem

      |- ‚àÄsp p a.
           algebra (sp,a) ‚àß a ‚äÜ p ‚àß
           (‚àÄs. s ‚àà p ‚à© subsets (sigma sp a) ‚áí sp DIFF s ‚àà p) ‚àß
           (‚àÄf.
              f ‚àà (ùïå(:num) -> p ‚à© subsets (sigma sp a)) ‚àß (f 0 = ‚àÖ) ‚àß
              (‚àÄn. f n ‚äÜ f (SUC n)) ‚áí
              BIGUNION (IMAGE f ùïå(:num)) ‚àà p) ‚àß
           (‚àÄf.
              f ‚àà (ùïå(:num) -> p ‚à© subsets (sigma sp a)) ‚àß
              (‚àÄm n. m ‚â† n ‚áí DISJOINT (f m) (f n)) ‚áí
              BIGUNION (IMAGE f ùïå(:num)) ‚àà p) ‚áí
           subsets (sigma sp a) ‚äÜ p

   [SIGMA_PROPERTY_DISJOINT_LEMMA]  Theorem

      |- ‚àÄsp a p.
           algebra (sp,a) ‚àß a ‚äÜ p ‚àß closed_cdi (sp,p) ‚áí
           subsets (sigma sp a) ‚äÜ p

   [SIGMA_PROPERTY_DISJOINT_LEMMA1]  Theorem

      |- ‚àÄa.
           algebra a ‚áí
           ‚àÄs t.
             s ‚àà subsets a ‚àß t ‚àà subsets (smallest_closed_cdi a) ‚áí
             s ‚à© t ‚àà subsets (smallest_closed_cdi a)

   [SIGMA_PROPERTY_DISJOINT_LEMMA2]  Theorem

      |- ‚àÄa.
           algebra a ‚áí
           ‚àÄs t.
             s ‚àà subsets (smallest_closed_cdi a) ‚àß
             t ‚àà subsets (smallest_closed_cdi a) ‚áí
             s ‚à© t ‚àà subsets (smallest_closed_cdi a)

   [SIGMA_PROPERTY_DISJOINT_WEAK]  Theorem

      |- ‚àÄsp p a.
           algebra (sp,a) ‚àß a ‚äÜ p ‚àß subset_class sp p ‚àß
           (‚àÄs. s ‚àà p ‚áí sp DIFF s ‚àà p) ‚àß
           (‚àÄf.
              f ‚àà (ùïå(:num) -> p) ‚àß (f 0 = ‚àÖ) ‚àß (‚àÄn. f n ‚äÜ f (SUC n)) ‚áí
              BIGUNION (IMAGE f ùïå(:num)) ‚àà p) ‚àß
           (‚àÄf.
              f ‚àà (ùïå(:num) -> p) ‚àß (‚àÄm n. m ‚â† n ‚áí DISJOINT (f m) (f n)) ‚áí
              BIGUNION (IMAGE f ùïå(:num)) ‚àà p) ‚áí
           subsets (sigma sp a) ‚äÜ p

   [SIGMA_REDUCE]  Theorem

      |- ‚àÄsp a. (sp,subsets (sigma sp a)) = sigma sp a

   [SIGMA_SUBSET]  Theorem

      |- ‚àÄa b.
           sigma_algebra b ‚àß a ‚äÜ subsets b ‚áí
           subsets (sigma (space b) a) ‚äÜ subsets b

   [SIGMA_SUBSET_MEASURABLE_SETS]  Theorem

      |- ‚àÄa m.
           measure_space m ‚àß a ‚äÜ measurable_sets m ‚áí
           subsets (sigma (m_space m) a) ‚äÜ measurable_sets m

   [SIGMA_SUBSET_SUBSETS]  Theorem

      |- ‚àÄsp a. a ‚äÜ subsets (sigma sp a)

   [SMALLEST_CLOSED_CDI]  Theorem

      |- ‚àÄa.
           algebra a ‚áí
           subsets a ‚äÜ subsets (smallest_closed_cdi a) ‚àß
           closed_cdi (smallest_closed_cdi a) ‚àß
           subset_class (space a) (subsets (smallest_closed_cdi a))

   [SPACE]  Theorem

      |- ‚àÄa. (space a,subsets a) = a

   [SPACE_BOREL]  Theorem

      |- space Borel = ùïå(:extreal)

   [SPACE_SIGMA]  Theorem

      |- ‚àÄsp a. space (sigma sp a) = sp

   [SPACE_SMALLEST_CLOSED_CDI]  Theorem

      |- ‚àÄa. space (smallest_closed_cdi a) = space a

   [STRONG_MEASURE_SPACE_SUBSET]  Theorem

      |- ‚àÄs s'.
           s' ‚äÜ m_space s ‚àß measure_space s ‚àß POW s' ‚äÜ measurable_sets s ‚áí
           measure_space (s',POW s',measure s)

   [SUBADDITIVE]  Theorem

      |- ‚àÄm s t u.
           subadditive m ‚àß s ‚àà measurable_sets m ‚àß t ‚àà measurable_sets m ‚àß
           (u = s ‚à™ t) ‚áí
           measure m u ‚â§ measure m s + measure m t

   [SUBSET_BIGINTER]  Theorem

      |- ‚àÄX P. X ‚äÜ BIGINTER P ‚áî ‚àÄY. Y ‚àà P ‚áí X ‚äÜ Y

   [UNIV_SIGMA_ALGEBRA]  Theorem

      |- sigma_algebra (ùïå(:Œ±),ùïå(:Œ± -> bool))

   [finite_additivity_sufficient_for_finite_spaces]  Theorem

      |- ‚àÄs m.
           sigma_algebra s ‚àß FINITE (space s) ‚àß
           positive (space s,subsets s,m) ‚àß
           additive (space s,subsets s,m) ‚áí
           measure_space (space s,subsets s,m)

   [finite_additivity_sufficient_for_finite_spaces2]  Theorem

      |- ‚àÄm.
           sigma_algebra (m_space m,measurable_sets m) ‚àß
           FINITE (m_space m) ‚àß positive m ‚àß additive m ‚áí
           measure_space m

   [indicator_fn_split]  Theorem

      |- ‚àÄr s b.
           FINITE r ‚àß (BIGUNION (IMAGE b r) = s) ‚àß
           (‚àÄi j. i ‚àà r ‚àß j ‚àà r ‚àß i ‚â† j ‚áí DISJOINT (b i) (b j)) ‚áí
           ‚àÄa.
             a ‚äÜ s ‚áí
             (indicator_fn a =
              (Œªx. SIGMA (Œªi. indicator_fn (a ‚à© b i) x) r))

   [indicator_fn_suminf]  Theorem

      |- ‚àÄa x.
           (‚àÄm n. m ‚â† n ‚áí DISJOINT (a m) (a n)) ‚áí
           (suminf (Œªi. indicator_fn (a i) x) =
            indicator_fn (BIGUNION (IMAGE a ùïå(:num))) x)

   [measure_split]  Theorem

      |- ‚àÄr b m.
           measure_space m ‚àß FINITE r ‚àß
           (BIGUNION (IMAGE b r) = m_space m) ‚àß
           (‚àÄi j. i ‚àà r ‚àß j ‚àà r ‚àß i ‚â† j ‚áí DISJOINT (b i) (b j)) ‚àß
           (‚àÄi. i ‚àà r ‚áí b i ‚àà measurable_sets m) ‚áí
           ‚àÄa.
             a ‚àà measurable_sets m ‚áí
             (measure m a = SIGMA (Œªi. measure m (a ‚à© b i)) r)


*)
end
